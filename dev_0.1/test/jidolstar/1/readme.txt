1. 오쓰인증을 해두면 드롭박스에서 땡겨오기라던가 그런것도 될거같아. 
2. 아작스로 페북포스트나 워드프레스 글을 땡겨오는것도 가능하겠지
3. 키 발급해서 인증된 사람만 사용할 수 있도록 하고 트레픽 제한도 걸고 로그도 남길 필요가 있을것 같다. 키는 header로 쏘도록 하면 될듯. 
   뭐... HTTP_BSCORSPROXY_ACCESS_KEY 정도로 하면 될듯. 그리고 그에 대응하는 서버는 HTTP_ORIGIN으로 체크하면 문제없을 것 같네. 다만 개발을 위해 로컬 테스트는 풀어줘야 할까?
   나중에 플러그인 사이트에서 개인키를 등록하고 계정설정을 열어주면 무궁무진
4. url의 개념도 프로토콜의 개념도 다 정의할 수 있지. dropbox://folder/file, github://project/..  
5. 단지 uri에는 필터라는 개념이 없어서 고민하고 있었지. 예를들어 이미지를 base64로 받고 싶으면 그래서 아마 커스텀헤더로 코스프록시에게 명령을 내릴거 깉아. filter: base64
6. 외부문서 가져와 셀렉팅!
   bs.ns( a, url), bs.Dom( #id, a) 하면 a에 있는 doc을 dom검색하는 것처럼 됨. 
  좀 정리하고 나면 그 사이트 어떤 폴더들 밑으로 크롤링헤서 info클래스 요소를 다 들고 오라던가.. 
  결국 원격셀렉팅을 할라고 셀렉터 엔진이 필요했음. 난 돔이 하나의 문서 갖혀있어서 너무 귀찮거든. 
  하나의 거대한 html을 만들기도 귀찮고 텍스트조각이나 단편된 html 귀찮고
  젤 좋는건 크롤러처럼 그 동네를 다 돌며 정보를 수집해주는거잖아 
  그걸 셀렉터 수준에서 구현하려는거지
  코스프록시가.개입해서 uri의 경계가 모호한.웹이 만들어져 
7. bs.Dom( #id, a) 은 결국 웹브라우저만을 위한 건 아니게 되는군요.
   node에서도 쓸 수 있음. 뭐... 그냥 js엔진을 쓰는 모든 곳에서 다 쓸 수 있겠네요.
   경계없는 웹의 개념을 나에게 뭐냐고 물어도 잘몰라. 점점 생각해내고 있거덩
   어떤 가치가 있을까 찾아보고 싶어지네요.
   쨌든 경계가 없어지면서 전혀 다른 접근이 필요하더라구
   
CorsProxy와 bsSelector의 조합은 결국 궁극적으로....
웹에 게시된겅 전부 가져다 쓸 수 있능 웹.. 을 만들기 위한 초석이다. 
